{"version":3,"sources":["./src/environments/environment.ts","./src/app/components/task/task.component.ts","./src/app/components/task/task.component.html","./src/app/store/sprint/sprint.actions.ts","./src/app/components/main/main.component.ts","./src/app/components/main/main.component.html","./src/app/store/member/member.actions.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/components/member/member.component.ts","./src/app/components/member/member.component.html","./src/app/app.module.ts","./src/app/components/sprint/sprint.component.ts","./src/app/components/sprint/sprint.component.html","./src/app/components/resume/resume.component.ts","./src/app/components/resume/resume.component.html","./src/app/material/material.module.ts","./src/app/store/sprint/sprint.reducer.ts","./src/app/store/reducers.ts","./src/app/store/member/member.reducer.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, Inject, Input, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Store } from '@ngrx/store';\nimport { selectMembers } from 'src/app/store/member/member.reducer';\nimport { Task } from 'src/app/store/model';\nimport { addTask, updateTask } from 'src/app/store/sprint/sprint.actions';\n\n@Component({\n  selector: 'app-task',\n  templateUrl: './task.component.html',\n  styleUrls: ['./task.component.scss']\n})\nexport class TaskComponent implements OnInit {\n\n\n  task: Task;\n  newStep = new FormControl();\n  newMember = new FormControl();\n  constructor(\n    public dialogRef: MatDialogRef<TaskComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    private store: Store,\n    private _snackBar: MatSnackBar) { }\n\n  ngOnInit(): void {\n    if (this.data.task) {\n      const dataString = JSON.stringify(this.data.task)\n      this.task = JSON.parse(dataString);\n    }\n    else {\n      this.task = {\n        id: new Date().getTime(),\n        name: null,\n        from: new Date(),\n        to: null,\n        description: null,\n        steps: [],\n        member: []\n      }\n    }\n    this.selectMembers();\n  }\n\n  selectMembers() {\n    this.store.select(selectMembers).subscribe(members => {\n      if (members) {\n        const ids = this.task.member.filter(m => m.selected).map(m => m.id);\n        const memberString = JSON.stringify(members);\n        this.task.member = JSON.parse(memberString)\n        this.task.member.forEach(m => {\n          if (ids.includes(m.id)) m.selected = true;\n        })\n      }\n    })\n  }\n\n  addStep() {\n    if (!this.newStep.value || this.newStep.value.trim().length === 0) return;\n    this.task.steps.push({ name: this.newStep.value, done: false })\n    this.newStep.reset();\n  }\n\n\n  checkError(): boolean {\n\n    if (!this.task.name) {\n      this._snackBar.open('Fill Name Field', 'close');\n      return true;\n    } else return false\n\n\n  }\n\n  save() {\n    if (this.checkError()) return;\n    if (this.data.task) this.store.dispatch(updateTask({ task: this.task, id: this.data.id }))\n    else this.store.dispatch(addTask({ task: this.task, id: this.data.id }))\n    this.dialogRef.close();\n\n  }\n}\n","<div class=\"task\">\n    <div class=\"task__header\">\n        <span>Task</span>\n        <mat-icon matDialogClose>close</mat-icon>\n    </div>\n    <div class=\"task__content\">\n        <div class=\"task__dates\">\n            <span><b>From: </b>{{task.from | date}}</span>\n            <mat-form-field appearance=\"legacy\">\n                <mat-label>End date</mat-label>\n                <input matInput [matDatepicker]=\"picker\" [(ngModel)]='task.to'>\n                <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                <mat-datepicker #picker></mat-datepicker>\n            </mat-form-field>\n        </div>\n        <div class=\"task__info\">\n            <mat-form-field appearance=\"legacy\">\n                <mat-label>Name</mat-label>\n                <input matInput [(ngModel)]='task.name'>\n            </mat-form-field>\n            <mat-form-field appearance=\"legacy\">\n                <mat-label>Description</mat-label>\n                <textarea rows=\"5\" matInput placeholder=\"Ex. It makes me feel...\"\n                    [(ngModel)]='task.description'></textarea>\n            </mat-form-field>\n        </div>\n        <div class=\"task__steps\">\n            <b>Steps</b>\n            <mat-checkbox color='primary' *ngFor='let step of task.steps' [(ngModel)]='step.done'>{{step.name}}\n            </mat-checkbox>\n            <div class='task__steps__actions'>\n                <mat-form-field appearance=\"legacy\">\n                    <mat-label>Crete New step</mat-label>\n                    <input matInput placeholder=\"new Step\" [formControl]='newStep'>\n                </mat-form-field>\n\n                <button mat-mini-fab color=\"primary\" (click)='addStep()'>\n                    <mat-icon>add</mat-icon>\n                </button>\n\n            </div>\n        </div>\n        <div class=\"task__members\">\n            <b>Members</b>\n            <mat-checkbox color='primary' *ngFor='let member of task.member' [(ngModel)]='member.selected'>\n                {{member.name}}\n            </mat-checkbox>\n        </div>\n    </div>\n    <div class=\"task__actions\">\n        <button mat-stroked-button color=\"primary\" (click)='dialogRef.close()'>\n            cancel\n        </button>\n        <button mat-raised-button color=\"primary\" (click)='save()'>\n            <mat-icon>save</mat-icon> Save\n        </button>\n    </div>\n</div>","import { createAction, props } from \"@ngrx/store\";\r\nimport { Sprint, Task } from \"../model\";\r\n\r\nexport enum sprintActionTypes {\r\n    \"create\" = '[Sprint] Create',\r\n    \"update\" = '[Sprint] Update',\r\n    \"remove\" = '[Sprint] remove',\r\n    \"Update List\" = '[Sprint] update list',\r\n    \"add task\" = '[Sprint] add task',\r\n    \"update task\" = '[Sprint] update task'\r\n}\r\n\r\n\r\nexport const createSprint = createAction(sprintActionTypes.create, props<{ name: string }>())\r\nexport const updateSprint = createAction(sprintActionTypes.update, props<{ name: string, id: string }>())\r\nexport const removeSprint = createAction(sprintActionTypes.remove, props<{ id: string }>())\r\nexport const updateSprintList = createAction(sprintActionTypes[\"Update List\"], props<{ sprint: Sprint }>())\r\nexport const addTask = createAction(sprintActionTypes[\"add task\"], props<{ task: Task, id: string }>())\r\nexport const updateTask = createAction(sprintActionTypes[\"update task\"], props<{ task: Task, id: string }>())\r\n","import { CdkDragDrop, moveItemInArray, transferArrayItem } from '@angular/cdk/drag-drop';\nimport { Component, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Store } from '@ngrx/store';\nimport { Sprint, Task } from 'src/app/store/model';\nimport { updateSprintList } from 'src/app/store/sprint/sprint.actions';\nimport { selectSprints } from 'src/app/store/sprint/sprint.reducer';\nimport { MemberComponent } from '../member/member.component';\nimport { SprintComponent } from '../sprint/sprint.component';\nimport { TaskComponent } from '../task/task.component';\nimport { first } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-main',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.scss']\n})\nexport class MainComponent implements OnInit {\n\n  sprintSelected: Sprint\n  sprints$ = this.store.select(selectSprints);\n  idSelected: string;\n  constructor(\n    private store: Store,\n    public dialog: MatDialog) { }\n\n  ngOnInit(): void {\n    this.sprints$.subscribe(data => {\n      if (data) {\n        this.idSelected = this.idSelected ? this.idSelected : JSON.parse(JSON.stringify(data[0])).id\n        this.sprintSelected = JSON.parse(JSON.stringify(data.filter(s => s.id === this.idSelected)[0]))\n      }\n    })\n  }\n\n  drop(event: CdkDragDrop<Task[]>, status) {\n    if (event.previousContainer === event.container) {\n      moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\n    } else {\n      transferArrayItem(\n        event.previousContainer.data,\n        event.container.data,\n        event.previousIndex,\n        event.currentIndex,\n      );\n    }\n    this.store.dispatch(updateSprintList({ sprint: this.sprintSelected }))\n  }\n\n  openCreateTask() {\n    this.dialog.open(TaskComponent, {\n      height: '100h',\n      width: '60%',\n      data: { task: null, id: this.idSelected }\n    });\n  }\n\n  sprints() {\n    this.dialog.open(SprintComponent, {\n      height: '95vh',\n      width: '60%',\n    });\n  }\n  members() {\n    this.dialog.open(MemberComponent, {\n      height: '95vh',\n      width: '60%',\n    });\n  }\n\n  changeSprint() {\n    this.sprints$.pipe(first()).subscribe(sprints => {\n      this.sprintSelected = sprints.filter(s => s.id === this.idSelected)[0]\n    })\n  }\n\n}\n","<div class=\"main__container\">\n\n    <div class=\"main__header\">\n        <h1>PERSONAL KANBAN</h1>\n        <mat-icon mat-button [matMenuTriggerFor]=\"menu\">settings</mat-icon>\n        <mat-menu #menu=\"matMenu\">\n            <button mat-menu-item (click)='sprints()'>Sprints</button>\n            <button mat-menu-item (click)='members()'>Members</button>\n        </mat-menu>\n    </div>\n    <div class=\"main__actions\">\n        <button mat-raised-button color=\"primary\" (click)='openCreateTask()'>\n            <mat-icon>add</mat-icon>\n            <span>CREATE TASK</span>\n        </button>\n\n        <mat-form-field appearance=\"standard\">\n            <mat-label>Sprints</mat-label>\n            <mat-select [(ngModel)]=\"idSelected\" (selectionChange)='changeSprint()'>\n                <mat-option *ngFor=\"let sprint of sprints$ | async\" [value]=\"sprint.id\">{{sprint.name}}</mat-option>\n            </mat-select>\n        </mat-form-field>\n\n\n    </div>\n    <div class=\"main__table\">\n        <div class=\"main__table__todo\">\n            <div class=\"title\">To Do</div>\n            <div class=\"content\" cdkDropList #todoList=\"cdkDropList\" [cdkDropListData]=\"sprintSelected.toDo\"\n                [cdkDropListConnectedTo]=\"[progressList,blockedList,doneList]\"\n                (cdkDropListDropped)=\"drop($event,'toDo')\">\n                <app-resume class='box' cdkDrag *ngFor=\"let item of sprintSelected.toDo\" [task]='item'\n                    [sprintId]='idSelected'></app-resume>\n            </div>\n        </div>\n        <div class=\"main__table__progress\">\n            <div class=\"title\">Progress</div>\n            <div class=\"content\" cdkDropList #progressList=\"cdkDropList\" [cdkDropListData]=\"sprintSelected.progress\"\n                [cdkDropListConnectedTo]=\"[todoList,blockedList,doneList]\"\n                (cdkDropListDropped)=\"drop($event,'progress')\">\n                <app-resume class='box' cdkDrag *ngFor=\"let item of sprintSelected.progress\" [task]='item'\n                    [sprintId]='idSelected'></app-resume>\n            </div>\n        </div>\n        <div class=\"main__table__blocked\">\n            <div class=\"title\">Blocked</div>\n            <div class=\"content\" cdkDropList #blockedList=\"cdkDropList\" [cdkDropListData]=\"sprintSelected.blocked\"\n                [cdkDropListConnectedTo]=\"[todoList,progressList,doneList]\"\n                (cdkDropListDropped)=\"drop($event,'blocked')\">\n                <app-resume class='box' cdkDrag *ngFor=\"let item of sprintSelected.blocked\" [task]='item'\n                    [sprintId]='idSelected'></app-resume>\n            </div>\n        </div>\n        <div class=\"main__table__done\">\n            <div class=\"title\">Done</div>\n            <div class=\"content\" cdkDropList #doneList=\"cdkDropList\" [cdkDropListData]=\"sprintSelected.done\"\n                [cdkDropListConnectedTo]=\"[todoList,progressList,blockedList]\"\n                (cdkDropListDropped)=\"drop($event,'done')\">\n                <app-resume class='box' cdkDrag *ngFor=\"let item of sprintSelected.done\" [task]='item'\n                    [sprintId]='idSelected'></app-resume>\n            </div>\n        </div>\n    </div>\n</div>","import { createAction, props } from \"@ngrx/store\";\r\n\r\nexport enum MemberActionTypes {\r\n    \"create\" = '[Member] Create',\r\n    \"update\" = '[Member] Update',\r\n    \"remove\" = '[Member] remove'\r\n}\r\n\r\n\r\nexport const createMember = createAction(MemberActionTypes.create, props<{ name: string }>())\r\nexport const updateMember = createAction(MemberActionTypes.update, props<{ name: string, id: string }>())\r\nexport const removeMember = createAction(MemberActionTypes.remove, props<{ id: string }>())","import { Component, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  title = 'Personal Kanban App';\n\n  constructor(private store: Store) { }\n\n  ngOnInit() {\n    this.store.subscribe((data: any) => {\n      localStorage.setItem('members', JSON.stringify(data.members))\n      localStorage.setItem('sprints', JSON.stringify(data.sprints))\n    })\n  }\n}\n","<app-main></app-main>","import { Component, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { Store } from '@ngrx/store';\nimport { createMember, removeMember, updateMember } from 'src/app/store/member/member.actions';\nimport { selectMembers } from 'src/app/store/member/member.reducer';\n\n@Component({\n  selector: 'app-member',\n  templateUrl: './member.component.html',\n  styleUrls: ['./member.component.scss']\n})\nexport class MemberComponent implements OnInit {\n\n\n  newMember = new FormControl('');\n  constructor(public store: Store,\n    public dialogRef: MatDialogRef<MemberComponent>) { }\n\n\n  members$ = this.store.select(selectMembers);\n  members: any;\n\n  ngOnInit(): void {\n    this.members$.subscribe(data => {\n      this.members = data.map(member => ({ ...member, editing: false }))\n    })\n  }\n\n  save(member) {\n    member.editing = false\n    this.store.dispatch(updateMember({ name: member.name, id: member.id }));\n  }\n\n  remove(member) {\n    member.editing = false;\n    this.store.dispatch(removeMember({ id: member.id }))\n\n  }\n\n  addMember() {\n    if (this.newMember.value?.trim().length > 0) {\n      this.store.dispatch(createMember({ name: this.newMember.value }))\n      this.newMember.reset();\n    }\n    else return\n  }\n\n}\n","<div class=\"member__container\">\n    <div class=\"member__header\">\n        members\n        <mat-icon matTooltip='exit' matDialogClose>close</mat-icon>\n    </div>\n\n    <div class=\"member__list\">\n        <div class=\"member__list__item\" *ngFor='let member of members'>\n            <div *ngIf='!member.editing'> {{member.name}} </div>\n            <mat-form-field *ngIf='member.editing' appearance=\"legacy\">\n                <input matInput [(ngModel)]='member.name'>\n            </mat-form-field>\n\n            <div class='member__list__item__buttons'>\n                <mat-icon matTooltip='edit member' *ngIf='!member.editing' (click)='member.editing=true'>edit</mat-icon>\n                <mat-icon matTooltip='save member' *ngIf='member.editing' (click)='save(member)'>save</mat-icon>\n                <mat-icon matTooltip='remove member' (click)='remove(member)'>delete</mat-icon>\n\n            </div>\n        </div>\n    </div>\n\n    <div class=\"member__add\">\n        <mat-form-field appearance=\"legacy\">\n            <mat-label>Crete New member</mat-label>\n            <input matInput placeholder=\"new Spring\" [formControl]='newMember'>\n        </mat-form-field>\n\n        <button mat-mini-fab color=\"primary\" (click)='addMember()'>\n            <mat-icon>add</mat-icon>\n        </button>\n\n    </div>\n\n\n\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\nimport { StoreModule } from '@ngrx/store';\nimport { MaterialModule } from './material/material.module';\nimport { reducers } from './store/reducers';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { SprintComponent } from './components/sprint/sprint.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MemberComponent } from './components/member/member.component';\nimport { ResumeComponent } from './components/resume/resume.component';\nimport { MainComponent } from './components/main/main.component';\nimport { TaskComponent } from './components/task/task.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SprintComponent,\n    MemberComponent,\n    ResumeComponent,\n    MainComponent,\n    TaskComponent\n  ],\n  imports: [\n    BrowserModule,\n    StoreModule.forRoot(reducers),\n    StoreDevtoolsModule.instrument({\n      maxAge: 25,\n      logOnly: false,\n      autoPause: true,\n    }),\n    MaterialModule,\n    BrowserAnimationsModule,\n    ReactiveFormsModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { Store } from '@ngrx/store';\nimport { createSprint, removeSprint, updateSprint } from 'src/app/store/sprint/sprint.actions';\nimport { selectSprints } from 'src/app/store/sprint/sprint.reducer';\n\n@Component({\n  selector: 'app-sprint',\n  templateUrl: './sprint.component.html',\n  styleUrls: ['./sprint.component.scss']\n})\nexport class SprintComponent implements OnInit {\n\n\n  newSprint = new FormControl('');\n  constructor(private store: Store,\n    public dialogRef: MatDialogRef<SprintComponent>\n  ) { }\n\n\n  sprints$ = this.store.select(selectSprints);\n  sprints: any;\n\n  ngOnInit(): void {\n    this.sprints$.subscribe(data => {\n      this.sprints = data.map(sprint => ({ ...sprint, editing: false }))\n    })\n  }\n\n  save(sprint) {\n    sprint.editing = false\n    this.store.dispatch(updateSprint({ name: sprint.name, id: sprint.id }));\n  }\n\n  remove(sprint) {\n    sprint.editing = false;\n    this.store.dispatch(removeSprint({ id: sprint.id }))\n\n  }\n\n  addSprint() {\n    if (this.newSprint.value?.trim().length > 0) {\n      this.store.dispatch(createSprint({ name: this.newSprint.value }))\n      this.newSprint.reset();\n    }\n    else return\n  }\n\n}\n","<div class=\"sprint__container\">\n    <div class=\"sprint__header\">\n        Sprints\n        <mat-icon matTooltip='exit' matDialogClose>close</mat-icon>\n    </div>\n\n    <div class=\"sprint__list\">\n        <div class=\"sprint__list__item\" *ngFor='let sprint of sprints'>\n            <div *ngIf='!sprint.editing'> {{sprint.name}} </div>\n            <mat-form-field *ngIf='sprint.editing' appearance=\"legacy\">\n                <input matInput [(ngModel)]='sprint.name'>\n            </mat-form-field>\n\n            <div class='sprint__list__item__buttons'>\n                <mat-icon matTooltip='edit sprint' *ngIf='!sprint.editing' (click)='sprint.editing=true'>edit</mat-icon>\n                <mat-icon matTooltip='save sprint' *ngIf='sprint.editing' (click)='save(sprint)'>save</mat-icon>\n                <mat-icon matTooltip='remove sprint' (click)='remove(sprint)'>delete</mat-icon>\n\n            </div>\n        </div>\n    </div>\n\n    <div class=\"sprint__add\">\n        <mat-form-field appearance=\"legacy\">\n            <mat-label>Crete New Sprint</mat-label>\n            <input matInput placeholder=\"new Spring\" [formControl]='newSprint'>\n        </mat-form-field>\n\n        <button mat-mini-fab color=\"primary\" (click)='addSprint()'>\n            <mat-icon>add</mat-icon>\n        </button>\n\n    </div>\n\n\n\n</div>","import { Component, Input, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Member, Task } from 'src/app/store/model';\nimport { TaskComponent } from '../task/task.component';\n\n@Component({\n  selector: 'app-resume',\n  templateUrl: './resume.component.html',\n  styleUrls: ['./resume.component.scss']\n})\nexport class ResumeComponent implements OnInit {\n\n  @Input('task') task: Task;\n  @Input('sprintId') id: string;\n  progress: number;\n  members: Member[];\n  constructor(private dialog: MatDialog) { }\n\n  ngOnInit(): void {\n    this.calculateProgress()\n    this.members = this.task?.member.filter(m => m.selected)\n  }\n\n  calculateProgress() {\n    this.progress = (this.task?.steps.filter(step => step.done).length / this.task?.steps.length) * 100\n  }\n\n  seeTask() {\n    this.dialog.open(TaskComponent, {\n      height: '100vh',\n      width: '60%',\n      data: { task: this.task, id: this.id }\n    });\n  }\n}\n","<div class='resume'>\r\n    <div class=\"resume__header\">\r\n        <h3>{{task?.name | titlecase}}</h3>\r\n        <mat-icon (click)='seeTask()'>visibility</mat-icon>\r\n    </div>\r\n    <div class=\"resume__dates\">\r\n        <span>From: {{task?.from | date}}</span>\r\n        <span *ngIf='task?.to'>To: {{task?.to | date}}</span>\r\n    </div>\r\n    <div class=\"resume__description\">\r\n        {{task?.description?.substring(0,100)}}\r\n    </div>\r\n    <div class=\"resume__footer\">\r\n        <div>\r\n            <span style='color:#6200EE' *ngIf='task?.steps.length>0'>{{progress | number : '1.2-2'}}%</span>\r\n        </div>\r\n        <div class='resume__footer__members'>\r\n            <ng-container *ngFor='let member of members;let i = index'>\r\n                <span [matTooltip]='member.name' class='resume__footer__members__member'\r\n                    *ngIf='i<3 '>{{member.name.substring(0,1)}}</span>\r\n            </ng-container>\r\n            <span *ngIf='members?.length>2'>...</span>\r\n        </div>\r\n    </div>\r\n\r\n</div>","import { NgModule } from \"@angular/core\";\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatButtonModule } from '@angular/material/button'\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { DragDropModule } from '@angular/cdk/drag-drop';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatNativeDateModule } from \"@angular/material/core\";\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\n\r\n@NgModule({\r\n    exports: [\r\n        MatIconModule,\r\n        MatButtonModule,\r\n        MatFormFieldModule,\r\n        MatInputModule,\r\n        MatTooltipModule,\r\n        MatSelectModule,\r\n        DragDropModule,\r\n        MatDialogModule,\r\n        MatDatepickerModule,\r\n        MatCheckboxModule,\r\n        MatNativeDateModule,\r\n        MatSnackBarModule,\r\n        MatMenuModule\r\n    ],\r\n    providers: [],\r\n})\r\nexport class MaterialModule { }","import { createFeatureSelector, createReducer, createSelector, on } from \"@ngrx/store\";\r\nimport { Sprint } from \"../model\";\r\nimport { addTask, createSprint, removeSprint, updateSprint, updateSprintList, updateTask } from \"./sprint.actions\";\r\n\r\nexport const initialState: Sprint[] = [{\r\n    id: new Date().getTime().toString(),\r\n    name: 'Default',\r\n    toDo: [],\r\n    progress: [],\r\n    blocked: [],\r\n    done: []\r\n}];\r\n\r\nconst onCreateSprint = (state, { name }) => {\r\n    const newState = [...state];\r\n    newState.push({\r\n        id: '' + new Date().getTime(),\r\n        name: name,\r\n        toDo: [],\r\n        progress: [],\r\n        blocked: [],\r\n        done: []\r\n    });\r\n    return newState;\r\n}\r\n\r\nconst onUpdateSprint = (state, { name, id }) => {\r\n    const newState = JSON.parse(JSON.stringify(state));\r\n    const sprint = newState.filter(s => s.id === id)[0];\r\n    sprint.name = name;\r\n    return newState;\r\n}\r\n\r\n\r\n\r\nconst onRemoveSprint = (state, { id }) => {\r\n    return state.filter(sprint => sprint.id !== id)\r\n}\r\n\r\nconst onUpdateSprintList = (state, { sprint }) => {\r\n    const sprints = state.filter(s => s.id !== sprint.id)\r\n    sprints.push(sprint)\r\n    return sprints\r\n}\r\n\r\nconst onAddTask = (state, { task, id }) => {\r\n    const sprint = JSON.parse(JSON.stringify(state.filter(s => s.id === id)[0]))\r\n    sprint.toDo.push(task)\r\n    const sprints = state.filter(s => s.id !== id)\r\n    sprints.push(sprint);\r\n    return sprints\r\n}\r\n\r\nconst onUpdateTask = (state, { task, id }) => {\r\n    const sprint: Sprint = JSON.parse(JSON.stringify(state.filter(s => s.id === id)[0]))\r\n    const sprints: Sprint[] = JSON.parse(JSON.stringify(state.filter(s => s.id !== id)))\r\n    const lists = ['toDo', 'progress', 'blocked', 'done']\r\n\r\n\r\n    for (let key of lists) {\r\n        let foundTaskIndex = Array(...sprint[key]).findIndex(t => t.id === task.id)\r\n        if (foundTaskIndex >= 0) {\r\n            sprint[key][foundTaskIndex] = task;\r\n            break;\r\n        }\r\n    }\r\n    sprints.push(sprint);\r\n    return sprints;\r\n}\r\n\r\nconst getInitialState = () => {\r\n    let initial: any = localStorage.getItem('sprints');\r\n    if (initial) initial = JSON.parse(initial)\r\n    else initial = initialState\r\n\r\n    return initial\r\n}\r\n\r\nexport const SprintReducer = createReducer(\r\n    getInitialState(),\r\n    on(createSprint, onCreateSprint),\r\n    on(updateSprint, onUpdateSprint),\r\n    on(removeSprint, onRemoveSprint),\r\n    on(updateSprintList, onUpdateSprintList),\r\n    on(addTask, onAddTask),\r\n    on(updateTask, onUpdateTask),\r\n\r\n)\r\n\r\nexport const selectSprints = createFeatureSelector<ReadonlyArray<Sprint>>('sprints');\r\n\r\n","import { MemberReducer } from \"./member/member.reducer\";\r\nimport { SprintReducer } from \"./sprint/sprint.reducer\";\r\n\r\nexport const reducers = {\r\n    sprints: SprintReducer,\r\n    members: MemberReducer\r\n}\r\n","import { createFeatureSelector, createReducer, on } from \"@ngrx/store\";\r\nimport { Member, Sprint } from \"../model\";\r\nimport { createMember, removeMember, updateMember } from \"./member.actions\";\r\n\r\nexport const initialState: Member[] = [];\r\n\r\nconst onCreateMember = (state, { name }) => {\r\n    const newState = [...state];\r\n    newState.push({\r\n        id: '' + new Date().getTime(),\r\n        name: name,\r\n        selected: false\r\n    });\r\n    return newState;\r\n}\r\n\r\nconst onUpdateMember = (state, { name, id }) => {\r\n    const newState = JSON.parse(JSON.stringify(state));\r\n    const sprint = newState.filter(s => s.id === id)[0];\r\n    sprint.name = name;\r\n    return newState;\r\n}\r\n\r\nconst onRemoveMember = (state, { id }) => {\r\n    return state.filter(member => member.id !== id)\r\n}\r\n\r\nconst getInitialState = () => {\r\n    let initial: any = localStorage.getItem('members');\r\n    if (initial) initial = JSON.parse(initial)\r\n    else initial = initialState\r\n\r\n    return initial\r\n}\r\n\r\n\r\nexport const MemberReducer = createReducer(\r\n    getInitialState(),\r\n    on(createMember, onCreateMember),\r\n    on(updateMember, onUpdateMember),\r\n    on(removeMember, onRemoveMember)\r\n\r\n)\r\n\r\nexport const selectMembers = createFeatureSelector<ReadonlyArray<Member>>('members');\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}